import { useEffect, useState } from 'react'

interface TimeLeft {
  days: number
  hours: number
  minutes: number
  seconds: number
}

export function CountdownTimer() {
  const [timeLeft, setTimeLeft] = useState<TimeLeft>({
    days: 0,
    hours: 0,
    minutes: 0,
    seconds: 0
  })

  useEffect(() => {
    // ƒê·∫∑t th·ªùi gian ƒë√≠ch - c√≥ th·ªÉ thay ƒë·ªïi theo y√™u c·∫ßu
    const targetDate = new Date()
    targetDate.setDate(targetDate.getDate() + 17) // 17 ng√†y t·ª´ b√¢y gi·ªù
    targetDate.setHours(targetDate.getHours() + 13) // th√™m 13 gi·ªù
    targetDate.setMinutes(targetDate.getMinutes() + 51) // th√™m 51 ph√∫t
    targetDate.setSeconds(targetDate.getSeconds() + 51) // th√™m 51 gi√¢y

    const timer = setInterval(() => {
      const now = new Date().getTime()
      const distance = targetDate.getTime() - now

      if (distance > 0) {
        setTimeLeft({
          days: Math.floor(distance / (1000 * 60 * 60 * 24)),
          hours: Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),
          minutes: Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),
          seconds: Math.floor((distance % (1000 * 60)) / 1000)
        })
      }
    }, 1000)

    return () => clearInterval(timer)
  }, [])

  return (
    <div className="max-w-4xl mx-auto mb-16 relative z-10">
      {/* Event announcement banner */}
      <div className="text-center mb-8">
        <div className="inline-flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-orange-500 to-amber-500 rounded-full text-white font-semibold text-lg shadow-lg animate-pulse">
          <span className="text-2xl">üî•</span>
          Gi·∫£i ƒê·∫•u M√πa H√® 2025 - ƒêang M·ªü ƒêƒÉng K√Ω
        </div>
      </div>

      {/* Main title */}
      <div className="text-center mb-12">
        <h1 className="text-5xl md:text-6xl lg:text-7xl font-bold text-white mb-6 leading-tight">
          T·∫§T C·∫¢ GI·∫¢I ƒê·∫§U TH·ªÇ THAO
        </h1>
        <h2 className="text-4xl md:text-5xl lg:text-6xl font-bold mb-6">
          T·∫†I M·ªòT{' '}
          <span className="bg-gradient-to-r from-orange-400 via-amber-400 to-yellow-400 bg-clip-text text-transparent">
            N∆†I DUY NH·∫§T!
          </span>
        </h2>
        <p className="text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
          N·ªÅn t·∫£ng t·ªï ch·ª©c gi·∫£i ƒë·∫•u th·ªÉ thao chuy√™n nghi·ªáp v·ªõi h·ªá th·ªëng qu·∫£n l√Ω t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao, tr·ª±c ti·∫øp v√†
          theo d√µi tr·ª±c tuy·∫øn.
        </p>
      </div>

      {/* Countdown section */}
      <div className="text-center">
        <div className="inline-flex items-center gap-3 mb-6">
          <span className="text-2xl">‚è∞</span>
          <span className="text-orange-400 font-semibold text-lg">Th·ªùi gian c√≤n l·∫°i ƒë·ªÉ ƒëƒÉng k√Ω:</span>
        </div>

        <div className="flex justify-center items-center gap-4 md:gap-6">
          {/* Days */}
          <div className="flex flex-col items-center">
            <div className="bg-gradient-to-br from-orange-500 to-amber-600 text-white text-4xl md:text-5xl font-bold rounded-2xl p-4 md:p-6 min-w-[80px] md:min-w-[100px] shadow-xl border-2 border-orange-400/30">
              {timeLeft.days.toString().padStart(2, '0')}
            </div>
            <span className="text-orange-300 font-semibold mt-2 text-sm md:text-base">NG√ÄY</span>
          </div>

          {/* Hours */}
          <div className="flex flex-col items-center">
            <div className="bg-gradient-to-br from-orange-500 to-amber-600 text-white text-4xl md:text-5xl font-bold rounded-2xl p-4 md:p-6 min-w-[80px] md:min-w-[100px] shadow-xl border-2 border-orange-400/30">
              {timeLeft.hours.toString().padStart(2, '0')}
            </div>
            <span className="text-orange-300 font-semibold mt-2 text-sm md:text-base">GI·ªú</span>
          </div>

          {/* Minutes */}
          <div className="flex flex-col items-center">
            <div className="bg-gradient-to-br from-orange-500 to-amber-600 text-white text-4xl md:text-5xl font-bold rounded-2xl p-4 md:p-6 min-w-[80px] md:min-w-[100px] shadow-xl border-2 border-orange-400/30">
              {timeLeft.minutes.toString().padStart(2, '0')}
            </div>
            <span className="text-orange-300 font-semibold mt-2 text-sm md:text-base">PH√öT</span>
          </div>

          {/* Seconds */}
          <div className="flex flex-col items-center">
            <div className="bg-gradient-to-br from-orange-500 to-amber-600 text-white text-4xl md:text-5xl font-bold rounded-2xl p-4 md:p-6 min-w-[80px] md:min-w-[100px] shadow-xl border-2 border-orange-400/30">
              {timeLeft.seconds.toString().padStart(2, '0')}
            </div>
            <span className="text-orange-300 font-semibold mt-2 text-sm md:text-base">GI√ÇY</span>
          </div>
        </div>
      </div>
    </div>
  )
}
